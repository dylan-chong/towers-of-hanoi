package main.gui.helpers;

import com.google.inject.Inject;
import com.google.inject.assistedinject.Assisted;

import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseWheelEvent;

/**
 * Created by Dylan on 29/03/17.
 */
public class MapMouseListener extends MouseAdapter {

    private final CallbackReceiver receiver;

    private MouseEvent mouseDownEvent, lastDragEvent;

    @Inject
    public MapMouseListener(@Assisted CallbackReceiver receiver) {
        this.receiver = receiver;
    }

    @Override
    public void mousePressed(MouseEvent e) {
        mouseDownEvent = e;
    }

    @Override
    public void mouseReleased(MouseEvent e) {
        mouseDownEvent = null;
        lastDragEvent = null;
    }

    @Override
    public void mouseClicked(MouseEvent e) {
        receiver.onClick(new Point(e.getX(), e.getY()));
    }

    @Override
    public void mouseDragged(MouseEvent e) {
        if (mouseDownEvent == null) throw new AssertionError();

        MouseEvent dragStart = lastDragEvent;
        if (lastDragEvent == null) {
            dragStart = mouseDownEvent;
        }

        int dx = e.getX() - dragStart.getX();
        int dy = e.getY() - dragStart.getY();
        receiver.onDrag(dx, dy);

        lastDragEvent = e;
    }

    @Override
    public void mouseWheelMoved(MouseWheelEvent e) {
        int zooms = e.getUnitsToScroll();
        for (int i = 0; i < Math.abs(zooms); i++) {
            receiver.onScroll(zooms < 0, new Point(e.getX(), e.getY()));
        }
    }

    public interface CallbackReceiver {
        void onClick(Point point);
        void onDrag(int dx, int dy);
        void onScroll(boolean isZoomIn, Point mousePosition);
    }

    /**
     * Implementation generated by Guice
     */
    public interface Factory {
        MapMouseListener create(CallbackReceiver receiver);
    }
}
