package main.mapdata.roads;

/**
 * Created by Dylan on 2/04/17.
 * <p>
 * The file has one line for each restriction. Each line has five values:
 * nodeID-1, roadID-1, nodeID, roadID-2, nodeID-2.
 * <p>
 * The middle NodeID specifies the intersection involved.
 * The restriction specifies that it is not permitted to turn from the road
 * segment of roadID-1 going between nodeID-1 and the intersection into the
 * road segment of roadID-2 going between the intersection and nodeID-2
 */
public class Restriction {
    public final long startNodeId;
    public final long roadId1;
    public final long startToIntersectionRoadId;
    public final long roadId2;
    public final long endNodeId;

    public Restriction(long startNodeId,
                       long roadId1,
                       long startToIntersectionRoadId,
                       long roadId2,
                       long endNodeId) {
        this.startNodeId = startNodeId;
        this.roadId1 = roadId1;
        this.startToIntersectionRoadId = startToIntersectionRoadId;
        this.roadId2 = roadId2;
        this.endNodeId = endNodeId;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) return true;
        if (obj == null || getClass() != obj.getClass()) return false;

        Restriction other = (Restriction) obj;

        return startNodeId == other.startNodeId &&
                roadId1 == other.roadId1 &&
                startToIntersectionRoadId == other.startToIntersectionRoadId &&
                roadId2 == other.roadId2 &&
                endNodeId == other.endNodeId;
    }

    @Override
    public int hashCode() {
        // Generated by IntelliJ
        int result = (int) (startNodeId ^ (startNodeId >>> 32));
        result = 31 * result + (int) (roadId1 ^ (roadId1 >>> 32));
        result = 31 * result + (int) (startToIntersectionRoadId ^ (startToIntersectionRoadId >>> 32));
        result = 31 * result + (int) (roadId2 ^ (roadId2 >>> 32));
        result = 31 * result + (int) (endNodeId ^ (endNodeId >>> 32));
        return result;
    }
}
